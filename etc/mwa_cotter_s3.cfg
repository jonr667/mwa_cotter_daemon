[dbinfo]

dbuser = test
dbpasswd = test
dbhost = test
dbport = 5432
dbtype = postgresql
dbname = test

[Still]
hosts = AUTO
port = 14204
data_dir = /eor-11/d1/uvfits_scratch
actions_per_still = 4
timeout = 4000
sleep_time = 10
block_size = 10
path_to_do_scripts = /nfs/eor-00/h1/jonr/still_workflow/scripts/mwa_cotter_s3

[ScriptEnvironmentVars]
wf_version = 4
wf_subversion = 1
production_dir = /nfs/{hostname}/r1/EoRuvfits/batch
cotter_args = -timeres 2 -freqres 80 -edgewidth 80 -usepcentre -initflag 2 -noflagautos -norfi -absmem 40 -j 5

[WorkFlow]

### 
# prioritize_obs : 0 or 1, disabled by default
# if enabled ( prioritize_obs = 1 ) we will make use the priority scheduling function Scheduler.determine_priority
# this is mainly used with the neighbors = 1 option and attempts to prioritize neighbors first 
###

prioritize_obs = 1

### 
# neighbors : 0 or 1, by default this is disabled, set = 1 to enable 
# If enabled we need to ensure we check to see if any other obsid's need to be processed
# before proceeding, if this is enabled the config option actions_end_file will be 
# used for cases where all the neighbors to a obsid have already been processed
###
neighbors = 0

###
# lock_all_neighbors_to_same_still : 0 or 1, if enabled then all neighbor obsid's will be routed to the same still server
###

lock_all_neighbors_to_same_still = 0

### 
# actions : comma seperated list of actions this workflow will perform in exact order.
# Do not use keywords NEW or COMPLETE, the system takes care of these internally, nothing is run on
# either the NEW or COMPLETE state, they are for internal tracking.  Once a workflow is completely
# finished it will be left in state COMPLETE.  To trigger the workflow set its Observation status to 
# the first action in the workflow, note that the first does not do anything except act as a placeholder
###
actions = READY, CREATE_OBS_DIR, GET_FITS_FILE_LOCATIONS, GET_FLAG_FILES, GET_FITS_FILES, MAKE_METAFITS, COTTER, COPY_METAFITS_HEADER, COPY_FILES_TO_PRODUCTION, WRITE_UVFITS_LOCATION, POPULATE_QC, COMPLETE
#, CLEANUP, COMPLETE




###
# still_locked_after : set equal to a workflow action that after the specified action has completed the task is now locked to a specific 
#   still server.
###

# still_locked_after = UV
### 
# actions_endfile :  only used when neighbors = 1
# This actions list will be used for an obsid after all of its neighbors have been processed
###
#actions_endfile = UV_POT, UV, UVC, CLEAN_UV, UVCR, CLEAN_UVC, CLEAN_UVCR, COMPLETE

### 
# prereqs : Add Prerequisites that neighbors must meet before proceeding to perform the specified action.  
# Example below adds the prereqs UVCR and CLEAN_UVCR to the ACQUIRE_NEIGHBORS action.
# In order for a obsid to proceed onto ACQUIRE_NEIGHBORS all of its neighbors need to 
# be in either the UVCR or CLEAN_UVCR state
###

[CREATE_OBS_DIR]
args = [obs]

[GET_FITS_FILE_LOCATIONS]
args = [obs]

[GET_FLAG_FILES]
args = [obs]

[GET_FITS_FILES]
args = [obs]

[MAKE_METAFITS]
args = [obs]

[COTTER]
args = [obs]

[COPY_METAFITS_HEADER]
args = [obs]

[COPY_FILES_TO_PRODUCTION]
args = [obs]

[WRITE_UVFITS_LOCATION]
args = [obs]

[POPULATE_QC]
args = [obs]

[CLEANUP]
args = [obs]


